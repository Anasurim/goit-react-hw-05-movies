{"version":3,"file":"static/js/253.2af519cd.chunk.js","mappings":"2NAGMA,EAAS,mCAAG,8FACA,mCACVC,EAFU,kEACA,oCADA,kBAKSC,MAAMD,GALf,cAKRE,EALQ,gBAMOA,EAASC,OANhB,cAMRC,EANQ,yBAQPA,GARO,kCAUdC,QAAQC,IAAR,MAVc,0DAAH,qDAcf,I,4CCfaC,EAAY,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OACpBI,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGL,EAAOM,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxC,UACE,uBAAIG,EAAMK,WAFLL,EAAME,GADA,KAStB,EC4BD,EAvCa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,kBAISrB,IAJT,OAIRG,EAJQ,OAKdG,QAAQC,IAAIJ,GACZgB,EAAUhB,EAASqB,SANL,gDAQdlB,QAAQC,IAAR,MARc,yBAUdc,GAAa,GAVC,4EAAH,qDAcfE,GACD,GAAE,KAGD,6BACE,wBAAI,mBACHH,IACC,SAAC,KAAD,CACEK,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAGb,SAACrB,EAAD,CAAWH,OAAQA,MAGxB,C","sources":["service/MovieAPI.jsx","components/MovieList.jsx","Pages/Home.jsx"],"sourcesContent":["// API-Key\n// 4c6e55add2f00844e9f979bd7b0fac7c\n\nconst getMovies = async () => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movies = await response.json();\n\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMovies;\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            <p>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n","import getMovies from 'service/MovieAPI';\nimport { useState, useEffect } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { MovieList } from 'components/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await getMovies();\n        console.log(response);\n        setMovies(response.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["getMovies","BASE_URL","fetch","response","json","movies","console","log","MovieList","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","isLoading","setIsLoading","useEffect","fetchData","results","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}
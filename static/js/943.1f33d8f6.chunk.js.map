{"version":3,"file":"static/js/943.1f33d8f6.chunk.js","mappings":"wQAsBA,EAtBsB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAGvB,OACE,wBACGA,EAAQC,KAAI,YAAyD,IAAtDC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,KAAoBC,EAAsB,EAApCC,aAA2BC,EAAS,EAATA,GAC1D,OACE,2BACE,yBACGN,GAAWI,IACV,gBAAKG,IAAG,UATD,kCASC,YAAqBH,GAAeI,IAAKL,OAGrD,yBAAG,SAAOA,MACV,yBAAG,cAAYD,OAPRI,EAUZ,KAGN,EC2BD,EAzCkB,WAChB,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEMC,GAAUC,EAAAA,EAAAA,MAoBhB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAIKK,EAAAA,EAAAA,IAAcJ,GAJnB,OAIRK,EAJQ,OAKdC,QAAQC,IAAIF,GACZR,EAAWQ,GANG,gDAQdC,QAAQC,IAAR,MARc,yBAUdR,GAAa,GAVC,4EAAH,qDAcfI,GACD,GAAE,CAACH,KAGF,gCACGF,IACC,SAAC,KAAD,CACEU,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIb,SAAC,EAAD,CAAezB,QAASA,MAG7B,C,sLC1CY0B,EAAS,mCAAG,8FACP,mCACVC,EAFiB,kEACP,oCADO,kBAKEC,MAAMD,GALR,cAKfE,EALe,gBAMAA,EAASC,OANT,cAMfC,EANe,yBAQdA,GARc,kCAUrBZ,QAAQC,IAAR,MAVqB,0DAAH,qDAcTY,EAAuB,mCAAG,WAAMC,GAAN,iFACrB,mCACVN,EAF+B,4DACrB,mCADqB,kBAEkDM,GAFlD,kBAKZL,MAAMD,GALM,cAK7BE,EAL6B,gBAMPA,EAASC,OANF,cAM7BI,EAN6B,yBAQ5BA,GAR4B,kCAUnCf,QAAQC,IAAR,MAVmC,0DAAH,sDAcvBe,EAAa,mCAAG,kGAAS7B,EAAT,EAASA,GACpB,mCACVqB,EAFqB,6CAE4BrB,EAF5B,oBACX,oCADW,kBAKFsB,MAAMD,GALJ,cAKnBE,EALmB,gBAMEA,EAASC,OANX,cAMnBM,EANmB,yBAQlBA,GARkB,kCAUzBjB,QAAQC,IAAR,MAVyB,0DAAH,sDAcbH,EAAa,mCAAG,kGAASX,EAAT,EAASA,GACpB,mCACVqB,EAFqB,6CAE4BrB,EAF5B,4BACX,oCADW,kBAKFsB,MAAMD,GALJ,cAKnBE,EALmB,gBAMDA,EAASC,OANR,cAMnBO,EANmB,yBAQlBA,EAAUnB,MARQ,kCAUzBC,QAAQC,IAAR,MAVyB,0DAAH,sDAcbkB,EAAgB,mCAAG,kGAAShC,EAAT,EAASA,GACvB,mCACVqB,EAFwB,6CAEyBrB,EAFzB,4BACd,oCADc,kBAKLsB,MAAMD,GALD,cAKtBE,EALsB,gBAMFA,EAASC,OANP,cAMtBS,EANsB,yBAQrBA,EAAYC,SARS,kCAU5BrB,QAAQC,IAAR,MAV4B,0DAAH,qD","sources":["components/MovieCastList.jsx","components/MovieCast.jsx","service/MovieAPI.jsx"],"sourcesContent":["const MovieCastList = ({ credits }) => {\n  const IMG_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <ul>\n      {credits.map(({ character, name, profile_path: profilePath, id }) => {\n        return (\n          <li key={id}>\n            <div>\n              {credits && profilePath && (\n                <img src={`${IMG_BASE_URL}/${profilePath}`} alt={name} />\n              )}\n            </div>\n            <p>Name: {name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieCastList;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from '../service/MovieAPI';\nimport { RotatingLines } from 'react-loader-spinner';\nimport MovieCastList from './MovieCastList';\n\nconst MovieCast = () => {\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const movieId = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const cast = await getMoviesCast(movieId);\n        console.log(cast);\n        setCredits(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n\n      <MovieCastList credits={credits} />\n    </>\n  );\n};\n\nexport default MovieCast;\n","// API-Key\n// 4c6e55add2f00844e9f979bd7b0fac7c\n\nexport const getMovies = async () => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movies = await response.json();\n\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesBySearchQuerry = async searchQuerry => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuerry}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const searchResults = await response.json();\n\n    return searchResults;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesById = async ({ id }) => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movieDetails = await response.json();\n\n    return movieDetails;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async ({ id }) => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movieCast = await response.json();\n\n    return movieCast.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesReviews = async ({ id }) => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movieReview = await response.json();\n\n    return movieReview.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["credits","map","character","name","profilePath","profile_path","id","src","alt","useState","setCredits","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getMoviesCast","cast","console","log","strokeColor","strokeWidth","animationDuration","width","visible","getMovies","BASE_URL","fetch","response","json","movies","getMoviesBySearchQuerry","searchQuerry","searchResults","getMoviesById","movieDetails","movieCast","getMoviesReviews","movieReview","results"],"sourceRoot":""}
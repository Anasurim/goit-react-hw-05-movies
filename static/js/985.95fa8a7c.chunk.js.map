{"version":3,"file":"static/js/985.95fa8a7c.chunk.js","mappings":"wQAeA,EAfwB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACzB,OACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,yBAAG,SAAOF,MACV,yBAAG,WAASC,OAFLC,EAKZ,KAGN,ECsCD,EA7CqB,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEMC,GAAUC,EAAAA,EAAAA,MAoBhB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAIQK,EAAAA,EAAAA,IAAiBJ,GAJzB,OAIRT,EAJQ,OAKdc,QAAQC,IAAIf,GACZM,EAAWN,GANG,gDAQdc,QAAQC,IAAR,MARc,yBAUdP,GAAa,GAVC,4EAAH,qDAcfI,GACD,GAAE,CAACH,KAGF,gCACGF,IACC,SAAC,KAAD,CACES,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IAIO,IAAnBpB,EAAQqB,QACP,yBAAK,0BAEL,SAAC,EAAD,CAAiBrB,QAASA,MAIjC,C,sLC9CYsB,EAAS,mCAAG,8FACP,mCACVC,EAFiB,kEACP,oCADO,kBAKEC,MAAMD,GALR,cAKfE,EALe,gBAMAA,EAASC,OANT,cAMfC,EANe,yBAQdA,GARc,kCAUrBb,QAAQC,IAAR,MAVqB,0DAAH,qDAcTa,EAAuB,mCAAG,WAAMC,GAAN,iFACrB,mCACVN,EAF+B,4DACrB,mCADqB,kBAEkDM,GAFlD,kBAKZL,MAAMD,GALM,cAK7BE,EAL6B,gBAMPA,EAASC,OANF,cAM7BI,EAN6B,yBAQ5BA,GAR4B,kCAUnChB,QAAQC,IAAR,MAVmC,0DAAH,sDAcvBgB,EAAa,mCAAG,kGAAS3B,EAAT,EAASA,GACpB,mCACVmB,EAFqB,6CAE4BnB,EAF5B,oBACX,oCADW,kBAKFoB,MAAMD,GALJ,cAKnBE,EALmB,gBAMEA,EAASC,OANX,cAMnBM,EANmB,yBAQlBA,GARkB,kCAUzBlB,QAAQC,IAAR,MAVyB,0DAAH,sDAcbkB,EAAa,mCAAG,kGAAS7B,EAAT,EAASA,GACpB,mCACVmB,EAFqB,6CAE4BnB,EAF5B,4BACX,oCADW,kBAKFoB,MAAMD,GALJ,cAKnBE,EALmB,gBAMDA,EAASC,OANR,cAMnBQ,EANmB,yBAQlBA,EAAUC,MARQ,kCAUzBrB,QAAQC,IAAR,MAVyB,0DAAH,sDAcbF,EAAgB,mCAAG,kGAAST,EAAT,EAASA,GACvB,mCACVmB,EAFwB,6CAEyBnB,EAFzB,4BACd,oCADc,kBAKLoB,MAAMD,GALD,cAKtBE,EALsB,gBAMFA,EAASC,OANP,cAMtBU,EANsB,yBAQrBA,EAAYC,SARS,kCAU5BvB,QAAQC,IAAR,MAV4B,0DAAH,qD","sources":["components/MovieReviewList.jsx","components/MovieReviews.jsx","service/MovieAPI.jsx"],"sourcesContent":["const MovieReviewList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <p>User: {author}</p>\n            <p>Review: {content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieReviewList;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from '../service/MovieAPI';\nimport { RotatingLines } from 'react-loader-spinner';\nimport MovieReviewList from './MovieReviewList';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const movieId = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const reviews = await getMoviesReviews(movieId);\n        console.log(reviews);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n\n      {reviews.length === 0 ? (\n        <div>No reviews available</div>\n      ) : (\n        <MovieReviewList reviews={reviews} />\n      )}\n    </>\n  );\n};\n\nexport default MovieReviews;\n","// API-Key\n// 4c6e55add2f00844e9f979bd7b0fac7c\n\nexport const getMovies = async () => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movies = await response.json();\n\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesBySearchQuerry = async searchQuerry => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuerry}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const searchResults = await response.json();\n\n    return searchResults;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesById = async ({ id }) => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movieDetails = await response.json();\n\n    return movieDetails;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async ({ id }) => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movieCast = await response.json();\n\n    return movieCast.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesReviews = async ({ id }) => {\n  const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(BASE_URL);\n    const movieReview = await response.json();\n\n    return movieReview.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["reviews","map","author","content","id","useState","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getMoviesReviews","console","log","strokeColor","strokeWidth","animationDuration","width","visible","length","getMovies","BASE_URL","fetch","response","json","movies","getMoviesBySearchQuerry","searchQuerry","searchResults","getMoviesById","movieDetails","getMoviesCast","movieCast","cast","movieReview","results"],"sourceRoot":""}